# -*- mode: makefile-gmake -*-

ifneq ($(VERILOG_SOURCES),)

$(COCOTB_RESULTS_FILE):
	@echo "Skipping simulation as Verilog is not supported on simulator=$(SIM)"
clean::

else

ifeq ($(COCOTB_NVC_TRACE), 1)
	TRACE :=--vhpi-trace
endif

CMD_BIN := nvc

ifdef NVC_BIN_DIR
    CMD := $(shell which $(NVC_BIN_DIR)/$(CMD_BIN) 2>/dev/null)
else
    # auto-detect bin dir from system path
    CMD := $(shell which $(CMD_BIN) 2>/dev/null)
endif

ifeq (, $(CMD))
    $(error "Unable to locate command >$(CMD_BIN)<")
else
	NVC_BIN_DIR := $(shell dirname $(CMD))
    export NVC_BIN_DIR
endif

RTL_LIBRARY ?= work

.PHONY: analyse

# Compilation phase
analyse: $(VHDL_SOURCES) $(SIM_BUILD)
	cd $(SIM_BUILD) && $(CMD) --work=$(RTL_LIBRARY) -a $(VHDL_SOURCES) $(COMPILE_ARGS) $(EXTRA_ARGS)

$(COCOTB_RESULTS_FILE): analyse $(COCOTB_LIBS) $(COCOTB_VHPI_LIB)
	cd $(SIM_BUILD) && LD_LIBRARY_PATH=$(LIB_DIR):$(LD_LIBRARY_PATH) \
		$(CMD) --work=$(RTL_LIBRARY) -e $(TOPLEVEL)
	cd $(SIM_BUILD) && PYTHONPATH=$(LIB_DIR):$(PWD):$(PYTHONPATH) \
		LD_LIBRARY_PATH=$(LIB_DIR):$(LD_LIBRARY_PATH) MODULE=$(MODULE) \
		TESTCASE=$(TESTCASE) TOPLEVEL=$(TOPLEVEL) TOPLEVEL_LANG=$(TOPLEVEL_LANG) COCOTB_SIM=1 \
		LD_LIBRARY_PATH=$(LIB_DIR) \
		$(CMD) $(SIM_ARGS) $(EXTRA_ARGS) $(PLUSARGS) --work=$(RTL_LIBRARY) -r --load $(COCOTB_VHPI_LIB) $(TRACE) $(TOPLEVEL)

clean::
	-@rm -rf $(SIM_BUILD)
endif
